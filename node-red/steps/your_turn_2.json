[
    {
        "id": "ba812835.cfd9f8",
        "type": "tab",
        "label": "Your turn! (2)",
        "disabled": false,
        "info": ""
    },
    {
        "id": "ed16e881.e10f68",
        "type": "inject",
        "z": "ba812835.cfd9f8",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 140,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "37136bfc.97ab84",
        "type": "debug",
        "z": "ba812835.cfd9f8",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "all",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 120,
        "y": 60,
        "wires": []
    },
    {
        "id": "d05f9214.e4993",
        "type": "function",
        "z": "ba812835.cfd9f8",
        "name": "function 3",
        "func": "msg.func3 = 30\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "7d0cc5e5.c5185c",
        "type": "function",
        "z": "ba812835.cfd9f8",
        "name": "function 2",
        "func": "msg.func2 = 20\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 100,
        "wires": [
            []
        ]
    },
    {
        "id": "14a4399f.da98b6",
        "type": "function",
        "z": "ba812835.cfd9f8",
        "name": "function 1",
        "func": "msg.func1 = 10\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 180,
        "wires": [
            []
        ]
    },
    {
        "id": "cea4d9c9.b21728",
        "type": "sort",
        "z": "ba812835.cfd9f8",
        "name": "",
        "order": "ascending",
        "as_num": false,
        "target": "all",
        "targetType": "msg",
        "msgKey": "",
        "msgKeyType": "elem",
        "seqKey": "payload",
        "seqKeyType": "msg",
        "x": 110,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e52169ef.04e898",
        "type": "function",
        "z": "ba812835.cfd9f8",
        "name": "function 4",
        "func": "msg.all = [Number(msg.func1), Number(msg.func2), Number(msg.func3)]\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 120,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "b2607aca.7975e8",
        "type": "comment",
        "z": "ba812835.cfd9f8",
        "name": "README",
        "info": "Nesse desafio iremos utilizar alguns dos nós que já vimos anteriormente e precisamos que uma informação seja exibida:\n\n - Ligue e ordene os componentes de forma com que sejam exibidos na tela de debug, os valores: `30, 20, 10` (nessa ordem).\n\nDica:\n\n * Não é necessário alterar nenhuma lógica dos componentes.",
        "x": 740,
        "y": 60,
        "wires": []
    },
    {
        "id": "952eb34ea3f8b986",
        "type": "comment",
        "z": "ba812835.cfd9f8",
        "name": "Resposta",
        "info": "O primeiro passo aqui é identificar os pontos de início e de fim. Que neste caso serão os nós `Inject` e `Debug`, respectivamente. E de forma intuitiva, podemos ligar as funções umas nas outras, seguindo a ordem numérica e acrescentar os nós de início e de fim. Por fim, ligue o nó `Sort` entre os nós `function 4` e `Debug`.\n\nNeste ponto, já temos um valor sendo exibido na tela de debug. Porém, não está ordenado de acordo com o teste. Para ajustar a classificação, edite o nó `Sort` e altere a propriedade `Order` para `descending`.",
        "x": 920,
        "y": 500,
        "wires": []
    }
]